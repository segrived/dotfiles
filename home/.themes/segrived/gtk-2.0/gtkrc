# absolute 1.0 by Alexey S. Ignatiev <twosev@gmail.com>

gtk_color_scheme = "fg_color:#404040\nbg_color:#DEDEDE\ntext_color:#404040\nbase_color:#F0F0F0\nselected_fg_color:#404040\nselected_bg_color:#96B4CD\ntooltip_fg_color:#404040\ntooltip_bg_color:#ECEDEE"
gtk_color_scheme = "frame_color:#dcdcdc\ninactive_frame_color:#e1e1e1" # Fix for Chrome
gtk-icon-sizes = "gtk-button=16,16:\ngtk-dnd=16,16:\npanel=16,16:\ngtk-small-toolbar=16,16:\ngtk-large-toolbar=16,16:"

style "murrine-default" {
  GtkButton         ::child-displacement-x  = 1
  GtkButton         ::child-displacement-y  = 1
  GtkButton         ::default-border        = { 0, 0, 0, 0 }
  GtkCheckButton    ::indicator-size        = 13
  GtkPaned          ::handle-size           = 6
  GtkRange          ::trough-border         = 0
  GtkRange          ::slider-width          = 10
  GtkRange          ::stepper-size          = 13
  GtkRange          ::stepper-spacing       = 1
  GtkRange          ::activate-slider       = 1
  GtkRange          ::arrow-displacement-x  = 1
  GtkRange          ::arrow-displacement-y  = 1
  GtkRange          ::arrow-scaling         = 0.7
  GtkScale          ::slider-length         = 25
  GtkScale          ::trough-side-details   = 0
  GtkScrollbar      ::min-slider-length     = 30
  GtkScrolledWindow ::scrollbar-spacing     = 3
  GtkMenuBar        ::internal-padding      = 2
  GtkExpander       ::expander-size         = 16
  GtkToolbar        ::internal-padding      = 1
  GtkTreeView       ::expander-size         = 14
  GtkTreeView       ::vertical-separator    = 0
  GtkMenu           ::horizontal-padding    = 0
  GtkMenu           ::vertical-padding      = 0
  GtkNotebook       ::tab-overlap           = -1
  GtkWindow         ::resize-grip-width     = 0
  GtkWindow         ::resize-grip-height    = 0
  GtkTreeView	    ::allow-rules		    = 0
  GtkEntry::honors-transparent-bg-hint      = 1
  GtkEntry::state-hint                      = 0
  GtkEntry::progress-border                 = { 0,0,0,0 }
  GtkMenuBar::shadow_type                   = GTK_SHADOW_NONE
  GtkToolbar::shadow_type                   = GTK_SHADOW_NONE

  xthickness = 2
  ythickness = 2

  fg[NORMAL]        = @fg_color
  fg[PRELIGHT]      = @fg_color
  fg[SELECTED]      = @selected_fg_color
  fg[ACTIVE]        = @fg_color
  fg[INSENSITIVE]   = darker (@bg_color)

  bg[NORMAL]        = @bg_color
  bg[PRELIGHT]      = shade (1.02, @bg_color)
  bg[SELECTED]      = @selected_bg_color
  bg[INSENSITIVE]   = @bg_color
  bg[ACTIVE]        = shade (0.9, @bg_color)

  base[NORMAL]      = @base_color
  base[PRELIGHT]    = shade (0.95, @bg_color)
  base[ACTIVE]      = "#96B4CD"
  base[SELECTED]    = "#96B4CD"
  base[INSENSITIVE] = @bg_color

  text[NORMAL]      = @text_color
  text[PRELIGHT]    = @text_color
  text[ACTIVE]      = "#F7F7F7"
  text[SELECTED]    = "#F7F7F7"
  text[INSENSITIVE] = darker (@bg_color)

  engine "murrine" {
    animation           = FALSE
    arrowstyle          = 0      # Not filled arrows   
    colorize_scrollbar  = FALSE
    comboboxstyle       = 0      # not colored combobox below the arrow
  contrast            = 0.7    # 0.8 for less contrast, more than 1.0 for more
                                 # contrast on borders
    expanderstyle       = 2      # buttons with plus and minus
    focusstyle          = 3      # colored rectangle touching the borders
    glazestyle          = 0      # 0 = flat highlight, 1 = curved highlight,
                                 # 2 = concave style, 3 = top curved highlight,
                                 # 4 = beryl highlight
    gradient_shades     = { 1.01, 1.0, 1.0, 0.99 }
	glowstyle           = 0 
    handlestyle         = 0      # three simple lines
    highlight_shade     = 1.0    # set highlight amount for buttons or widgets
    lightborder_shade   = 1.2    # sets lightborder amount for buttons or widgets
    lightborderstyle    = 1      # 0 = lightborder on top side, 1 = lightborder
                                 # on all sides
    listviewheaderstyle = 1      # 0 = flat, 1 = glassy, 2 = raised
    listviewstyle       = 1      # 0 = nothing, 1 = dotted
    menubaritemstyle    = 1      # 0 = menuitem look, 1 = button look
    menubarstyle        = 0      # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
    menuitemstyle       = 0      # 0 = flat, 1 = glassy, 2 = striped
    menustyle           = 0      # 0 = no vertical menu stripe, 1 = display
                                 # vertical menu stripe
    progressbarstyle    = 0      # 0 = flat, 1 = stripped, 2 = blocks
    reliefstyle         = 0     # 0 = flat, 1 = inset, 2 = shadow
    rgba                = FALSE  # FALSE = disabled, TRUE = enabled
    roundness           = 0      # 0 = squared, 1 = old default, more will
                                 # increase roundness
    scrollbarstyle      = 0      # 0 = nothing, 1 = circles, 2 = handles,
                                 # 3 = diagonal stripes, 4 = diagonal stripes
                                 # and handles, 5 = horizontal stripes,
                                 # 6 = horizontal stripes and handles
    separatorstyle      = 1      # smooth separator
    sliderstyle         = 0      # 0 = nothing added, 1 = handles
    stepperstyle        = 1      # 0 = standard, 1 = integrated stepper handles,
                                 # 2 = unknown
    toolbarstyle        = 2      # 0 = flat, 1 = glassy, 2 = gradient
	}
}

style "murrine-nogap" {
  xthickness   = 0
  ythickness   = 0
}

style "murrine-wide" {
  xthickness   = 2
  ythickness   = 2
}

style "murrine-wider" {
  xthickness   = 2
  ythickness   = 2
}

style "murrine-button" {
  xthickness   = 2
  ythickness   = 2
  bg[NORMAL]   = @bg_color
  bg[ACTIVE]   =  @bg_color
}

style "murrine-entry" {
  xthickness   = 3
  ythickness   = 3

 bg[SELECTED] = mix (0.4, @selected_bg_color, @base_color)
  fg[SELECTED] = @text_color

  engine "murrine" {
    border_shades = { 1.0, 1.0 }
    contrast      = .7
  }
}

style "murrine-notebook-bg" = "murrine-wider" {
  bg[NORMAL]   = @bg_color
  bg[ACTIVE]   = @bg_color
}

style "murrine-notebook" = "murrine-notebook-bg" {
}

style "murrine-tasklist" {
  xthickness   = 3
  ythickness   = 3
}

style "murrine-panel" {
}

style "murrine-menu" {
  xthickness   = 2
  ythickness   = 2
  fg[PRELIGHT] = "#ECEDEE"
  # Radius of the menu items (inside menus)
  engine "murrine" {
    roundness  = 0
  }
}

style "murrine-menu-item" { # = "bold-text"
  xthickness   = 3
  ythickness   = 3
  fg[PRELIGHT] = "#ECEDEE"
  bg[PRELIGHT] = @selected_bg_color
}

style "murrine-separator-menu-item" {
  GtkSeparatorMenuItem::horizontal-padding = 0
  # We are setting the desired height by using wide-separators
  # There is no other way to get the odd height ...
  GtkWidget::wide-separators  = 1
  GtkWidget::separator-width  = 1
  GtkWidget::separator-height = 5
  xthickness   = 0
  ythickness   = 0
}

style "murrine-treeview" {
  engine "murrine" {
    roundness = 0 # The radius for progress bars insied treeview.
  }
}

# Based on the default style so that the colors from the button
# style are overriden again.
style "murrine-treeview-header" = "murrine-button" {
  xthickness   = 2
  ythickness   = 1
}

style "theme-button" = "theme-widest"
{
	xthickness   = 2
	ythickness   = 2

	#bg[ACTIVE]   = shade (0.87,@bg_color)
       # bg[INSENSITIVE] = shade (1.03,@bg_color)
bg[INSENSITIVE] = @bg_color
}


style "theme-check-radio-buttons" = "theme-button"
{
	GtkWidget::interior-focus =  0
	GtkWidget::focus-padding  =  1

        bg[SELECTED]              =  @bg_color
       text[ACTIVE] = "#464646"
#text[ACTIVE] = "#5E5E60"
        text[NORMAL]   =  "#464646"
	text[PRELIGHT] = "#464646"


	

}
style "murrine-frame-title" {
  fg[NORMAL]   = lighter (@fg_color)
}

style "murrine-tooltips" {
  xthickness   = 4
  ythickness   = 4

  bg[NORMAL]   = @tooltip_bg_color
  fg[NORMAL]   = @tooltip_fg_color
}

style "murrine-progressbar" {
  xthickness   = 0
  ythickness   = 0

  fg[PRELIGHT] = "#ECEDEE"

  engine "murrine" {
    # Explicitly set the radius, for progress
    # bars inside menuitems
    roundness  = 0
    trough_border_shades = { .98, 1.1 }
  }
}

style "murrine-statusbar" {
  xthickness   = 2
  ythickness   = 2
}

style "murrine-comboboxentry" {
  xthickness   = 3
  ythickness   = 3
}

style "murrine-spinbutton" {

}

style "murrine-scale" {
  GtkRange::slider-width  = 12
  GtkScale::slider-length = 12

  engine "murrine" {
    roundness  = 0
    trough_border_shades = { .98, 1.1 }
  }
}

style "murrine-hscale" {
}

style "murrine-vscale" {
}

style "murrine-scrollbar" = "murrine-button" {
  GtkRange::trough-under-steppers = 0
  bg[NORMAL]   =  @bg_color
bg[PRELIGHT]   = @selected_bg_color 

  engine "murrine" {
    roundness  = 0
  }
}

style "murrine-menubar" {
  xthickness   = 1
  ythickness   = 1
  bg[NORMAL] = "#DEDEDE"
  fg[NORMAL] = "#5A5A5A"
  engine "murrine" {
    roundness	 = 0
  }
}

style "murrine-low" {
  engine "murrine" {
    contrast   = 0.85
  }
}

style "murrine-evo-new-button" {
  engine "murrine" {
    toolbarstyle = 1
  }
}

style "murrine-gedit-sidetoolbar" {
  GtkToolbar::shadow_type = GTK_SHADOW_NONE
}

#########################################
# Matches
#########################################

# Murrine default style is applied to every widget
class "GtkWidget"     style "murrine-default"

# Increase the x/ythickness in some widgets
class "GtkToolbar"    style "murrine-default"
class "GtkRange"      style "murrine-wide"
class "GtkFrame"      style "murrine-wide"
class "GtkSeparator"  style "murrine-wide"

class "GtkEntry"      style "murrine-entry"
class "GtkSpinButton" style "murrine-spinbutton"
class "GtkScale"      style "murrine-scale"
class "GtkVScale"     style "murrine-vscale"
class "GtkHScale"     style "murrine-hscale"
class "GtkScrollbar"  style "murrine-scrollbar"
class "GtkVScrollbar" style "murrine-scrollbar"
class "GtkHScrollbar" style "murrine-scrollbar"
class "GtkCheckButton"  style "theme-check-radio-buttons"
class "GtkButton"       style "theme-button"

# General matching following, the order is choosen so that the right styles
# override each other eg. progressbar needs to be more important then the
# menu match.

#Panel
widget "*PanelWidget*"      style "murrine-panel"
widget "*PanelApplet*"      style "murrine-panel"
widget "*fast-user-switch*" style "murrine-panel" # Workaround for
                                                  # Fast User Switch applet
class  "PanelApp*"          style "murrine-panel"
class  "PanelToplevel*"     style "murrine-panel"

# This is not perfect, it could be done better
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>"    style "murrine-notebook-bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "murrine-notebook-bg"
widget_class "*<GtkNotebook>*<GtkLayout>"      style "murrine-notebook-bg"

widget_class "*<GtkButton>"                    style "murrine-button"
widget_class "*<GtkNotebook>"                  style "murrine-notebook"
widget_class "*<GtkStatusbar>*"                style : highest "murrine-statusbar"

widget_class "*<GtkComboBoxEntry>*"            style "murrine-comboboxentry"
widget_class "*<GtkCombo>*"                    style "murrine-comboboxentry"

widget_class "*<GtkMenu>*"                     style "murrine-menu"
widget_class "*<GtkMenuItem>*"                 style "murrine-menu-item"
widget_class "*<GtkMenuBar>*"                  style "murrine-menubar"
widget_class "*<GtkSeparatorMenuItem>*"        style "murrine-separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>"         style "murrine-frame-title"
widget_class "*.<GtkTreeView>*"                style "murrine-treeview"

widget_class "*<GtkProgressBar>"               style "murrine-progressbar"

#widget_class "*ToolButton*"                    style "small-text"
#widget_class "*Statusbar*"                     style "small-text"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>"     style "murrine-treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"        style "murrine-treeview-header"
widget_class "*.<GtkList>.<GtkButton>"         style "murrine-treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"        style "murrine-treeview-header"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"                style "murrine-treeview-header"
widget_class "*.ETree.ECanvas"                 style "murrine-treeview-header"
widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "murrine-evo-new-button"


# Toolbar appearance for Gedit sidepane
widget_class "*Gedit*Pane*"                    style "murrine-gedit-sidetoolbar"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" style "murrine-tooltips"

###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "murrine-nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
# This style does not affect GtkComboBoxEntry, it does have an effect
# on comboboxes in appears-as-list mode though.
style "murrine-text-is-fg-color-workaround" {
  text[NORMAL]      = @fg_color
  text[PRELIGHT]    = @fg_color
  text[SELECTED]    = @selected_fg_color
  text[ACTIVE]      = @fg_color
  text[INSENSITIVE] = darker (@bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>" style "murrine-text-is-fg-color-workaround"

style "murrine-menuitem-text-is-fg-color-workaround" {
  text[NORMAL]      = @fg_color
  text[PRELIGHT]    = @selected_fg_color
  text[SELECTED]    = @selected_fg_color
  text[ACTIVE]      = @fg_color
  text[INSENSITIVE] = darker (@bg_color)
}
widget "*.gtk-combobox-popup-menu.*" style "murrine-menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "murrine-fg-is-text-color-workaround" {
  fg[NORMAL]        = @text_color
  fg[PRELIGHT]      = @text_color
  fg[ACTIVE]        = @selected_fg_color
  fg[SELECTED]      = @selected_fg_color
  fg[INSENSITIVE]   = darker (@bg_color)
}
widget_class "*<GtkListItem>*" style "murrine-fg-is-text-color-workaround"
# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also
# change the headers.
widget_class "*<GtkCList>"     style "murrine-fg-is-text-color-workaround"
